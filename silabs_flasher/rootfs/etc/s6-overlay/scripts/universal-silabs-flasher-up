#!/usr/bin/with-contenv bashio
# vim: ft=bash
# shellcheck shell=bash
# ==============================================================================
# Start universal-silabs-flasher
# ==============================================================================

set -e

# shellcheck disable=SC2034
declare device
declare bootloader_baudrate
declare verbose
declare gpio_reset_flag
declare exit_status

function cleanup() {
    exit_status=$?
    bashio::log.info "universal-silabs-flasher-up script exited with code ${exit_status}"
    echo "${exit_status}" > /run/s6-linux-init-container-results/exitcode

    /run/s6/basedir/bin/halt
}
trap cleanup EXIT

# Function to check if the device is Home Assistant Yellow
function is_home_assistant_yellow {
    # First, ensure the device is /dev/ttyAMA1
    if [ "${device}" != "/dev/ttyAMA1" ]; then
        return 1
    fi

    # Check the known paths for Home Assistant Yellow
    local paths=(
        "/sys/devices/platform/soc/fe201800.serial/tty/ttyAMA1"
        "/sys/devices/platform/axi/1000120000.pcie/1f0003c000.serial/tty/ttyAMA1"
    )
    for path in "${paths[@]}"; do
        if [ -d "${path}" ]; then
            return 0
        fi
    done
    return 1
}

device=$(bashio::config 'device')
bootloader_baudrate=$(bashio::config 'bootloader_baudrate')

if is_home_assistant_yellow; then
    bashio::log.info "Detected Home Assistant Yellow"
    gpio_reset_flag="--bootloader-reset yellow"
else
    gpio_reset_flag=""
fi

if ! bashio::config.has_value 'firmware_url'; then
    bashio::log.warning "No firmware URL passed."
    exit 0
fi

curl --silent -L -o "/root/firmware.gbl" "$(bashio::config 'firmware_url')"
if [ ! -f "/root/firmware.gbl" ]; then
    bashio::log.warning "Downloading firmware failed"
    exit 0
fi

verbose=""
if bashio::config.true 'verbose'; then
    verbose="-v"
fi

bashio::log.info "Starting universal-silabs-flasher with ${device} (bootloader baudrate ${bootloader_baudrate})"
# shellcheck disable=SC2086
universal-silabs-flasher \
    ${verbose} \
    --device ${device} \
    --bootloader-baudrate "${bootloader_baudrate}" \
    ${gpio_reset_flag} \
    flash --force --firmware "/root/firmware.gbl"


